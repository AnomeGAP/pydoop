#!/bin/bash

set -euo pipefail

this="${BASH_SOURCE-$0}"
this_dir=$(cd -P -- "$(dirname -- "${this}")" && pwd -P)

WD=$(mktemp -d)

pushd "${this_dir}/.."

dev_tools/release "${WD}"
VERSION=$(<"VERSION")
pushd "${this_dir}"
cp "${WD}"/dist/pydoop-${VERSION}.tar.gz .
docker build -t crs4/pydoop-dist:latest -t crs4/pydoop-dist:${VERSION} -f Dockerfile.dist .
docker run --rm --name pydoop -d crs4/pydoop-dist:${VERSION}
docker exec pydoop bash -c 'while : ; do jps | grep DataNode && break; done'
# smoke test
docker exec pydoop bash -c "cd test && pydoop -V"
docker exec -e VERSION=${VERSION} pydoop bash -c 'cd test && ${PYTHON} -c "import pydoop.version as v; assert v.version == \"${VERSION}\"; assert v.git_rev"'
docker exec pydoop bash -c "cd examples/pydoop_submit && bash run_submit.sh wordcount_full"
docker stop pydoop

echo "${CI_PASS}" | docker login -u "${CI_USER}" --password-stdin
for img in pydoop pydoop-dist pydoop-docs; do
    for tag in latest ${VERSION}; do
	docker push crs4/${img}:${tag}
    done
done

export TWINE_PASSWORD="${CI_PASS}"
twine upload -u "${CI_USER}" pydoop-${VERSION}.tar.gz

popd
popd
